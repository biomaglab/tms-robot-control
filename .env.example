# Copy this file to '.env' and set the values.

# One of 'aalto', 'tubingen', 'usp_coil', 'usp_neurosoft', 'default'
SITE=

# One of 'elfin', 'elfin_new_api', 'dobot', 'ur', 'test'
ROBOT=

# Either 'true' or 'false'
USE_FORCE_SENSOR=

# Either 'radially_outward' or 'directly_upward' or 'directly_PID'
MOVEMENT_ALGORITHM=

# The duration in seconds to wait after the robot completes the movement, before the next movement starts.
#
# This is used so that the neuronavigation has enough time to send updated coordinates to the robot control software,
# and we want to base the next movement command on the up-to-date information.
#
# For instance, in Aalto, the time between consecutive coordinate updates from neuronavigation can be as much
# as 0.8 seconds. Hence, the recommended dwell time in Aalto is 0.8 seconds.
DWELL_TIME=

# The height in millimeters from the robot basis that is considered safe in that the robot can move to that height
# and perform rotations and movements in XY-plane without hitting the subject.
#
# Only used by 'directly_upward' algorithm.
#
# In Aalto, 680 mm has been used successfully in a pilot experiment.
SAFE_HEIGHT=

# The default speed of the robot as a proportion of the maximum speed (between 0.01-1.0).
#
# This needs to be configurable because different installations have different requirements; for instance,
# when using an mTMS coil, the coil cables are heavy, which means that the robot has to avoid fast movements
# to not make cables (typically attached to the robot arm) bump into the robot arm.
#
# In Aalto, 0.01 has been used successfully in a pilot experiment.
DEFAULT_SPEED_RATIO=

# The speed of the robot when tuning the robot pose as a proportion of the maximum speed (between 0.01-1.0).
#
# Typically, tuning speed should be lower than the default speed to avoid fast movements near the human subject.
TUNING_SPEED_RATIO=

# Either 'true' or 'false'. If 'true', the robot will stop if the head is not visible. If 'false', the robot will
# continue to move even if the head is not visible.
#
# NOTE: For safety reasons, this should be set to 'true' in most cases.
#
# However, if the camera does not completely reliably see the head, this can be set to 'false' to avoid unnecessary
# stopping of the robot. This should be considered as a workarond; as the correct fix, the reliability of the camera
# should be improved.
STOP_ROBOT_IF_HEAD_NOT_VISIBLE=

# The interval in seconds to tune the robot pose. Takes place even if the target has been reached.
# If unset (i.e., an empty string without quotes), the robot will not be tuned if the target has been reached.
#
# This value should be somewhat high to avoid robot tuning too often, e.g., 2.0 seconds or more.
#
# TODO: This feature should be tested in real experiments and removed if not deemed useful.
TUNING_INTERVAL=

## Thresholds

# Threshold (in mm) for translation relative to the target, above which the robot re-initiates the movement sequence.
# A good value to start with is 3 mm. If the camera has a low precision, this value should be increased.
TRANSLATION_THRESHOLD=

# Threshold (in degrees) for rotation relative to the target, above which the robot re-initiates the movement sequence.
# A good value to start with is 3 degrees. If the camera has a low precision, this value should be increased.
ROTATION_THRESHOLD=

## Testing and debugging

# Either 'true' or 'false'. If 'true', waits for the user to press a key ('f2') each time before
# initiating a movement.
#
# Note: Only use 'true' for testing and debugging purposes. In real experiments, this should be set to 'false'.
WAIT_FOR_KEYPRESS_BEFORE_MOVEMENT=

# Either 'true' or 'false'. If false, tries to avoid logging unless the robot state changes.
VERBOSE=
